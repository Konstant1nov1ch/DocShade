// Code generated by mockery v2.42.1. DO NOT EDIT.

package mocks

import (
	rest_service "document-upload-service/usecases/upload_service"

	mock "github.com/stretchr/testify/mock"
)

// RestServiceFactory is an autogenerated mock type for the RestServiceFactory type
type RestServiceFactory struct {
	mock.Mock
}

// GetService provides a mock function with given fields:
func (_m *RestServiceFactory) GetService() rest_service.RestService {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetService")
	}

	var r0 rest_service.RestService
	if rf, ok := ret.Get(0).(func() rest_service.RestService); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(rest_service.RestService)
		}
	}

	return r0
}

// NewRestServiceFactory creates a new instance of RestServiceFactory. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewRestServiceFactory(t interface {
	mock.TestingT
	Cleanup(func())
}) *RestServiceFactory {
	mock := &RestServiceFactory{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
